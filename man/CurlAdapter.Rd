% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/adapter-curl.R
\docType{data}
\name{CurlAdapter}
\alias{CurlAdapter}
\title{curl library adapter}
\description{
curl library adapter
}
\details{
\strong{Methods}
\describe{
\item{\code{enable()}}{
Enable the adapter
}
\item{\code{disable()}}{
Disable the adapter
}
\item{\code{build_curl_request(x)}}{
Build a curl \link{RequestSignature}
x: curl request parts (list)
}
\item{\code{build_curl_response(req, resp)}}{
Build a curl response
req: a curl request (list)
resp: a curl response ()
}
\item{\code{handle_request()}}{
All logic for handling a request
req: a curl request (list)
}
\item{\code{remove_curl_stubs()}}{
Remove all curl stubs
}
}

This adapter modifies \pkg{curl} to allow mocking HTTP requests
}
\examples{
library(curl)

# before mocking turned on
h <- new_handle()
curl_fetch_memory("https://httpbin.org/get?foo=bar", h)

# after mocking turned on
curl::mock()
curl_fetch_memory("https://httpbin.org/get?foo=bar", h)

# after stubbing request
stub_request("get", "https://httpbin.org/get?foo=bar")
stub_registry()

# now you get a mocked response
curl_fetch_memory("https://httpbin.org/get?foo=bar", h)

# another request, this time setting what to return
h2 <- new_handle()
g = curl_fetch_memory("https://httpbin.org/get?bear=brown", h2)
stub_request('get', uri = 'https://httpbin.org/get?bear=brown') \%>\% 
    to_return(status = 418, body = "stuff", headers = list(a = 5))
stub_registry()

# make request, inspect returned items
g = curl_fetch_memory("https://httpbin.org/get?bear=brown", h2)
g
rawToChar(g$headers)
rawToChar(g$content)

# allow net connect - NOT WORKING YET
# webmockr_allow_net_connect()
# webmockr_net_connect_allowed()
# h3 <- new_handle()
# curl_fetch_memory("https://httpbin.org/get?cow=brown", h3)

}
\seealso{
Other http_lib_adapters: \code{\link{CrulAdapter}}
}
\keyword{datasets}
